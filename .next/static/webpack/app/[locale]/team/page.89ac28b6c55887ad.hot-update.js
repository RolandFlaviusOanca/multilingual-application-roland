"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/team/page",{

/***/ "(app-pages-browser)/./src/atoms/favoritesAtom.ts":
/*!************************************!*\
  !*** ./src/atoms/favoritesAtom.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   favoritesAtom: function() { return /* binding */ favoritesAtom; },\n/* harmony export */   favoritesWithPersistenceAtom: function() { return /* binding */ favoritesWithPersistenceAtom; }\n/* harmony export */ });\nconst getFavoritesFromStorage = ()=>{\n    if (true) {\n        const storedFavorites = localStorage.getItem(\"favorites\");\n        return storedFavorites ? JSON.parse(storedFavorites) : [];\n    }\n    return [];\n};\n// Save favorites to localStorage\nconst setFavoritesToStorage = (favorites)=>{\n    if (true) {\n        localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    }\n};\n// Atom to store the favorites list\nconst favoritesAtom = atom(getFavoritesFromStorage());\n// Atom to manage persistence of the favorites in localStorage\nconst favoritesWithPersistenceAtom = atom((get)=>get(favoritesAtom), (get, set, newFavorites)=>{\n    set(favoritesAtom, newFavorites);\n    setFavoritesToStorage(newFavorites);\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hdG9tcy9mYXZvcml0ZXNBdG9tLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsTUFBTUEsMEJBQTBCO0lBQzVCLElBQUksSUFBa0IsRUFBYTtRQUMvQixNQUFNQyxrQkFBa0JDLGFBQWFDLE9BQU8sQ0FBQztRQUM3QyxPQUFPRixrQkFBa0JHLEtBQUtDLEtBQUssQ0FBQ0osbUJBQW1CLEVBQUU7SUFDN0Q7SUFDQSxPQUFPLEVBQUU7QUFDYjtBQUVBLGlDQUFpQztBQUNqQyxNQUFNSyx3QkFBd0IsQ0FBQ0M7SUFDM0IsSUFBSSxJQUFrQixFQUFhO1FBQy9CTCxhQUFhTSxPQUFPLENBQUMsYUFBYUosS0FBS0ssU0FBUyxDQUFDRjtJQUNyRDtBQUNKO0FBRUEsbUNBQW1DO0FBQzVCLE1BQU1HLGdCQUFnQkMsS0FBaUJYLDJCQUEyQjtBQUV6RSw4REFBOEQ7QUFDdkQsTUFBTVksK0JBQStCRCxLQUN4QyxDQUFDRSxNQUFRQSxJQUFJSCxnQkFDYixDQUFDRyxLQUFLQyxLQUFLQztJQUNQRCxJQUFJSixlQUFlSztJQUNuQlQsc0JBQXNCUztBQUMxQixHQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hdG9tcy9mYXZvcml0ZXNBdG9tLnRzPzk5ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlclR5cGUgfSBmcm9tIFwiQC9saWIvdHlwZXNcIjtcblxuY29uc3QgZ2V0RmF2b3JpdGVzRnJvbVN0b3JhZ2UgPSAoKTogVXNlclR5cGVbXSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnN0IHN0b3JlZEZhdm9yaXRlcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZmF2b3JpdGVzXCIpO1xuICAgICAgICByZXR1cm4gc3RvcmVkRmF2b3JpdGVzID8gSlNPTi5wYXJzZShzdG9yZWRGYXZvcml0ZXMpIDogW107XG4gICAgfVxuICAgIHJldHVybiBbXTtcbn07XG5cbi8vIFNhdmUgZmF2b3JpdGVzIHRvIGxvY2FsU3RvcmFnZVxuY29uc3Qgc2V0RmF2b3JpdGVzVG9TdG9yYWdlID0gKGZhdm9yaXRlczogVXNlclR5cGVbXSkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImZhdm9yaXRlc1wiLCBKU09OLnN0cmluZ2lmeShmYXZvcml0ZXMpKTtcbiAgICB9XG59O1xuXG4vLyBBdG9tIHRvIHN0b3JlIHRoZSBmYXZvcml0ZXMgbGlzdFxuZXhwb3J0IGNvbnN0IGZhdm9yaXRlc0F0b20gPSBhdG9tPFVzZXJUeXBlW10+KGdldEZhdm9yaXRlc0Zyb21TdG9yYWdlKCkpO1xuXG4vLyBBdG9tIHRvIG1hbmFnZSBwZXJzaXN0ZW5jZSBvZiB0aGUgZmF2b3JpdGVzIGluIGxvY2FsU3RvcmFnZVxuZXhwb3J0IGNvbnN0IGZhdm9yaXRlc1dpdGhQZXJzaXN0ZW5jZUF0b20gPSBhdG9tKFxuICAgIChnZXQpID0+IGdldChmYXZvcml0ZXNBdG9tKSxcbiAgICAoZ2V0LCBzZXQsIG5ld0Zhdm9yaXRlczogVXNlclR5cGVbXSkgPT4ge1xuICAgICAgICBzZXQoZmF2b3JpdGVzQXRvbSwgbmV3RmF2b3JpdGVzKTtcbiAgICAgICAgc2V0RmF2b3JpdGVzVG9TdG9yYWdlKG5ld0Zhdm9yaXRlcyk7XG4gICAgfVxuKTtcbiJdLCJuYW1lcyI6WyJnZXRGYXZvcml0ZXNGcm9tU3RvcmFnZSIsInN0b3JlZEZhdm9yaXRlcyIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJzZXRGYXZvcml0ZXNUb1N0b3JhZ2UiLCJmYXZvcml0ZXMiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiZmF2b3JpdGVzQXRvbSIsImF0b20iLCJmYXZvcml0ZXNXaXRoUGVyc2lzdGVuY2VBdG9tIiwiZ2V0Iiwic2V0IiwibmV3RmF2b3JpdGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/atoms/favoritesAtom.ts\n"));

/***/ })

});